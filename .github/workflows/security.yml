# File: .github/.github/workflows/security.yml
name: Reusable - Security Checks
on:
  workflow_call:
    inputs:
      languages:
        description: "Comma-separated list for CodeQL (e.g., javascript,python)"
        required: false
        type: string
        default: "javascript,python"
permissions:
  contents: read
  security-events: write
  actions: read # Needed for trufflesecurity/trufflehog to clone private repos
  pull-requests: write
jobs:
  security-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history is recommended for some security scanners

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          ignore-unfixed: true
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "HIGH,CRITICAL"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

      - name: Detect available languages
        id: detect-languages
        run: |
          # Parse input languages
          INPUT_LANGUAGES="${{ inputs.languages }}"
          AVAILABLE_LANGUAGES=""

          # Check each requested language
          IFS=',' read -ra LANGS <<< "$INPUT_LANGUAGES"
          for lang in "${LANGS[@]}"; do
            lang=$(echo "$lang" | xargs) # trim whitespace
            case $lang in
              "javascript")
                if find . -type f \( -name "*.js" -o -name "*.ts" -o -name "*.jsx" -o -name "*.tsx" \) -not -path "./.git/*" -not -path "./node_modules/*" -print -quit | grep -q .; then
                  AVAILABLE_LANGUAGES="${AVAILABLE_LANGUAGES:+$AVAILABLE_LANGUAGES,}$lang"
                fi
                ;;
              "python")
                if find . -type f -name "*.py" -not -path "./.git/*" -not -path "./node_modules/*" -print -quit | grep -q .; then
                  AVAILABLE_LANGUAGES="${AVAILABLE_LANGUAGES:+$AVAILABLE_LANGUAGES,}$lang"
                fi
                ;;
              "java")
                if find . -type f -name "*.java" -not -path "./.git/*" -not -path "./node_modules/*" -print -quit | grep -q .; then
                  AVAILABLE_LANGUAGES="${AVAILABLE_LANGUAGES:+$AVAILABLE_LANGUAGES,}$lang"
                fi
                ;;
              "go")
                if find . -type f -name "*.go" -not -path "./.git/*" -not -path "./node_modules/*" -print -quit | grep -q .; then
                  AVAILABLE_LANGUAGES="${AVAILABLE_LANGUAGES:+$AVAILABLE_LANGUAGES,}$lang"
                fi
                ;;
              "csharp")
                if find . -type f -name "*.cs" -not -path "./.git/*" -not -path "./node_modules/*" -print -quit | grep -q .; then
                  AVAILABLE_LANGUAGES="${AVAILABLE_LANGUAGES:+$AVAILABLE_LANGUAGES,}$lang"
                fi
                ;;
              "cpp")
                if find . -type f \( -name "*.cpp" -o -name "*.c" -o -name "*.h" \) -not -path "./.git/*" -not -path "./node_modules/*" -print -quit | grep -q .; then
                  AVAILABLE_LANGUAGES="${AVAILABLE_LANGUAGES:+$AVAILABLE_LANGUAGES,}$lang"
                fi
                ;;
              "ruby")
                if find . -type f -name "*.rb" -not -path "./.git/*" -not -path "./node_modules/*" -print -quit | grep -q .; then
                  AVAILABLE_LANGUAGES="${AVAILABLE_LANGUAGES:+$AVAILABLE_LANGUAGES,}$lang"
                fi
                ;;
            esac
          done

          echo "available-languages=$AVAILABLE_LANGUAGES" >> $GITHUB_OUTPUT
          if [ -n "$AVAILABLE_LANGUAGES" ]; then
            echo "has-languages=true" >> $GITHUB_OUTPUT
          else
            echo "has-languages=false" >> $GITHUB_OUTPUT
          fi
          echo "Detected languages: $AVAILABLE_LANGUAGES"

      - name: Initialize CodeQL
        if: steps.detect-languages.outputs.has-languages == 'true'
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ steps.detect-languages.outputs.available-languages }}
          queries: security-extended # More thorough than default

      - name: Perform CodeQL Analysis
        if: steps.detect-languages.outputs.has-languages == 'true'
        uses: github/codeql-action/analyze@v3

      - name: Secret detection with TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --only-verified

      - name: Comment security summary on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const codeqlSkipped = '${{ steps.detect-languages.outputs.has-languages }}' !== 'true';
            const comment = `
            ## üõ°Ô∏è Security Scan Summary
            - ‚úÖ **Trivy vulnerability scan**: Completed
            - ${codeqlSkipped ? '‚è≠Ô∏è' : '‚úÖ'} **CodeQL analysis**: ${codeqlSkipped ? 'Skipped (no supported files found)' : 'Completed'}
            - ‚úÖ **Secret detection**: Completed
            Please check the 'Security' tab for detailed results and any potential vulnerabilities.
            `;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
