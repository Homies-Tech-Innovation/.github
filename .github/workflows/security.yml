# File: .github/.github/workflows/security.yml
name: Reusable - Security Checks
on:
  workflow_call:
    inputs:
      languages:
        description: "Comma-separated list for CodeQL (e.g., javascript,python)"
        required: false
        type: string
        default: "javascript,python"
permissions:
  contents: read
  security-events: write
  actions: read
  pull-requests: write

jobs:
  security-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          ignore-unfixed: true
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "HIGH,CRITICAL"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

      # THIS IS THE NEW, CORRECT LANGUAGE DETECTION SCRIPT
      - name: Detect Available Languages
        id: detect-languages
        run: |
          # Parse the list of languages the user wants to scan for
          INPUT_LANGUAGES="${{ inputs.languages }}"

          # This will hold the list of languages we ACTUALLY find
          FOUND_LANGUAGES=""

          # Define common exclusion paths
          EXCLUSIONS="-not -path './.git/*' -not -path './node_modules/*' -not -path './dist/*' -not -path './build/*' -not -path './coverage/*' -not -path './*venv*/*' -not -path './__pycache__/*'"

          # Check for each language INDIVIDUALLY
          if [[ ",$INPUT_LANGUAGES," == *",javascript,"* ]]; then
            if find . -type f \( -name "*.js" -o -name "*.ts" -o -name "*.jsx" -o -name "*.tsx" \) $EXCLUSIONS -print -quit | grep -q .; then
              echo "JavaScript/TypeScript source code found."
              FOUND_LANGUAGES="${FOUND_LANGUAGES:+$FOUND_LANGUAGES,}javascript"
            fi
          fi

          if [[ ",$INPUT_LANGUAGES," == *",python,"* ]]; then
            if find . -type f -name "*.py" $EXCLUSIONS -print -quit | grep -q .; then
              echo "Python source code found."
              FOUND_LANGUAGES="${FOUND_LANGUAGES:+$FOUND_LANGUAGES,}python"
            fi
          fi

          # Add other languages here following the same pattern if needed...

          # Set the outputs
          if [ -n "$FOUND_LANGUAGES" ]; then
            echo "Languages to scan: $FOUND_LANGUAGES"
            echo "detected-languages=$FOUND_LANGUAGES" >> $GITHUB_OUTPUT
            echo "has-languages=true" >> $GITHUB_OUTPUT
          else
            echo "No scannable source code found for the requested languages. Skipping CodeQL."
            echo "has-languages=false" >> $GITHUB_OUTPUT
          fi

      # THIS STEP NOW ONLY RUNS IF THE SCRIPT ABOVE FOUND AT LEAST ONE LANGUAGE
      - name: Initialize CodeQL
        if: steps.detect-languages.outputs.has-languages == 'true'
        uses: github/codeql-action/init@v3
        with:
          # AND THIS IS THE CRITICAL FIX: We pass ONLY the languages that were actually found.
          languages: ${{ steps.detect-languages.outputs.detected-languages }}
          queries: security-extended

      # This step will now only be asked to analyze languages that definitely exist.
      - name: Perform CodeQL Analysis
        if: steps.detect-languages.outputs.has-languages == 'true'
        uses: github/codeql-action/analyze@v3

      - name: Secret detection with TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --only-verified

      - name: Comment security summary on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // This logic is now reliable because the detection step is accurate.
            const codeqlSkipped = '${{ steps.detect-languages.outputs.has-languages }}' !== 'true';
            const comment = `
            ## üõ°Ô∏è Security Scan Summary
            - ‚úÖ **Trivy vulnerability scan**: Completed
            - ${codeqlSkipped ? '‚è≠Ô∏è' : '‚úÖ'} **CodeQL analysis**: ${codeqlSkipped ? 'Skipped (no source code found)' : 'Completed'}
            - ‚úÖ **Secret detection**: Completed
            Please check the 'Security' tab for detailed results.
            `;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
