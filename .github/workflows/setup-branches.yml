name: Reusable - Setup Branch Protection

on:
  workflow_call:
  workflow_dispatch:

jobs:
  protect-branches:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        branch_config:
          - name: "main"
            linear_history: false
          - name: "dev"
            linear_history: true

    steps:
      - name: Protect ${{ matrix.branch_config.name }} branch
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branchName = '${{ matrix.branch_config.name }}';
            const linearHistory = ${{ matrix.branch_config.linear_history }};

            // Optional: Check if the branch exists before trying to protect it
            try {
              await github.rest.repos.getBranch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: branchName,
              });
              console.log(`‚úÖ Branch '${branchName}' found. Applying protection rules...`);
            } catch (error) {
              if (error.status === 404) {
                console.log(`‚ö†Ô∏è Branch '${branchName}' not found in repo ${context.repo.owner}/${context.repo.repo}. Skipping protection.`);
                return; // Exit this job successfully
              } else {
                throw error; // Re-throw other errors
              }
            }

            // Apply the protection rules
            await github.rest.repos.updateBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: branchName,
              required_status_checks: {
                strict: true,
                contexts: ['security-checks', 'lint-javascript', 'lint-python']
              },
              enforce_admins: false,
              required_pull_request_reviews: {
                required_approving_review_count: 1,
                dismiss_stale_reviews: true,
                require_code_owner_reviews: true,
                require_last_push_approval: true
              },
              required_linear_history: linearHistory,
              allow_force_pushes: false,
              allow_deletions: false, 
              required_conversation_resolution: true,
              lock_branch: false,
              allow_fork_syncing: true,
              restrictions: null
            });

            console.log(`üîí Branch protection successfully configured for '${branchName}'.`);
            console.log(`   - Required Linear History: ${linearHistory}`);

      - name: Final Summary
        if: success()
        run: echo "‚úÖ All branch protection rules applied successfully."
