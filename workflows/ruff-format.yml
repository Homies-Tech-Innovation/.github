name: Ruff Auto-Formatter

on:
  pull_request:
    branches:
      - "dev"
      - "main"
      - "test-**"
    paths:
      - "**/*.py"
      - "**/pyproject.toml"
      - "**/ruff.toml"

permissions:
  contents: write
  pull-requests: write

jobs:
  format-and-commit:
    name: Format Code with Ruff
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR Branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv and Ruff
        run: |
          pip install uv
          uv pip install ruff --system

      - name: Run Ruff Linter (check only)
        id: ruff-check
        run: |
          if uvx ruff check . --output-format=json > ruff-check-results.json 2>&1; then
            echo "ruff_check_passed=true" >> $GITHUB_OUTPUT
          else
            echo "ruff_check_passed=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Ruff Formatter
        run: uvx ruff format .

      - name: Check for formatting changes
        id: git-check
        run: |
          if ! git diff --quiet; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes to commit."
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and Push Changes
        if: steps.git-check.outputs.has_changes == 'true'
        run: |
          # Configure git with a bot user
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          # Count the number of formatted files and store it in an environment variable for the next step
          echo "FILES_FORMATTED=$(git status --porcelain | wc -l)" >> $GITHUB_ENV
          # Add all changes, commit them, and push to the PR's branch
          git add .
          git commit -m "style: ‚ú® auto-format with Ruff"
          git push

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const hasChanges = '${{ steps.git-check.outputs.has_changes }}' === 'true';
            const ruffCheckPassed = '${{ steps.ruff-check.outputs.ruff_check_passed }}' === 'true';
            const filesFormatted = process.env.FILES_FORMATTED || '0';

            let comment = `## üêç Python Ruff Results\n\n`;

            if (hasChanges) {
              comment += `‚ú® **Auto-formatted**: ${filesFormatted} file(s) with Ruff!\n`;
              comment += `üìù Changes have been automatically committed to this PR.\n\n`;
            } else {
              comment += `‚úÖ **Formatting**: All files already properly formatted\n`;
            }

            comment += `${ruffCheckPassed ? '‚úÖ' : '‚ö†Ô∏è'} **Linting**: ${ruffCheckPassed ? 'No issues found' : 'Issues detected (check logs)'}\n`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
